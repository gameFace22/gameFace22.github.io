<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ls -l /var/www/blog</title>
    <link>https://gameface22.github.io/blog/post/</link>
    <description>Recent content in Posts on ls -l /var/www/blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright (c) 2017, all rights reserved.</copyright>
    <lastBuildDate>Sun, 03 Jun 2018 18:29:58 +0530</lastBuildDate>
    
	<atom:link href="https://gameface22.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Internet of Insecure Things</title>
      <link>https://gameface22.github.io/blog/post/internet-of-insecure-things/</link>
      <pubDate>Sun, 03 Jun 2018 18:29:58 +0530</pubDate>
      
      <guid>https://gameface22.github.io/blog/post/internet-of-insecure-things/</guid>
      <description>A couple of weeks back, I got the opportunity of pentesting an IoT device. To give a brief background, it was a Pi running Apache which served static content. Recently, there has been a lot of focus on IoT security, especially after the havoc created by malware like Mirai, VPNFilter, ForgotDoor. Following post contains details of how a simple configuration flaw led to code execution in one of the IoT devices.</description>
    </item>
    
    <item>
      <title>Pwning admin panel with recon</title>
      <link>https://gameface22.github.io/blog/post/pwning-admin-panel-with-recon/</link>
      <pubDate>Wed, 11 Apr 2018 20:12:47 +0530</pubDate>
      
      <guid>https://gameface22.github.io/blog/post/pwning-admin-panel-with-recon/</guid>
      <description>Reconnaissance is one of the interesting and most critical parts of penetration testing. Using recon, one could yield API endpoints, sensitive files/folders, juicy subdomains and so on. During a recent engagement, I was able to get access to the administrative panel due to lack of authorization and sensitive files being published publicly.
Let us start with analysing the iOS application statically. On going through the Info.plist, we can see that there is a URL hardcoded.</description>
    </item>
    
    <item>
      <title>Directory Listing to Account Takeover</title>
      <link>https://gameface22.github.io/blog/post/directory-listing-to-takeover/</link>
      <pubDate>Sat, 30 Dec 2017 01:19:34 -0800</pubDate>
      
      <guid>https://gameface22.github.io/blog/post/directory-listing-to-takeover/</guid>
      <description>Directory listing is one of the most common misconfigurations which can be exploited trivially. However, the impact depends on the criticality of the files present inside the directory.
Recently, during one of my pentests, I came across an interesting open directory which I was able to leverage. On enumerating, I discovered a subdomain which was the staging server and was accessible over the internet.
[nishaanthguna:~/essentials]$ curl --silent https://crt.sh/\?q\=%.domain.com | sed &#39;s/&amp;lt;\/\?</description>
    </item>
    
  </channel>
</rss>